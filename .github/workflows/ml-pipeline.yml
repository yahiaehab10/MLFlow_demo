name: ML Pipeline CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
  MLFLOW_TRACKING_URI: "https://dagshub.com/yahiaehab10/MLFlow_demo.mlflow"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v
    
    - name: Lint code
      run: |
        flake8 src/ --max-line-length=88
        black --check src/

  data-validation:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: pip install -r requirements.txt
    
    - name: Validate data schema
      run: |
        python -c "
        import pandas as pd
        from src.data_preprocessing import validate_data_schema
        df = pd.read_csv('data/raw/iris.csv')
        assert validate_data_schema(df), 'Data schema validation failed'
        "

  training:
    needs: [test, data-validation]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: pip install -r requirements.txt
    
    - name: Configure DagsHub
      run: |
        dvc remote modify origin password $DAGSHUB_TOKEN
    
    - name: Pull data
      run: dvc pull
    
    - name: Run training pipeline
      run: |
        python -m src.pipeline
    
    - name: Check model performance
      run: |
        python -c "
        import json
        with open('metrics.json', 'r') as f:
            metrics = json.load(f)
        assert metrics['accuracy'] > 0.8, f'Model accuracy {metrics[\"accuracy\"]} below threshold'
        "

  model-promotion:
    needs: training
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: pip install -r requirements.txt
    
    - name: Promote model
      run: |
        python scripts/promote_model.py
