name: ML Pipeline CI/CD & Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    env:
      DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
      MLFLOW_TRACKING_URI: "https://dagshub.com/yahiaehab10/MLFlow_demo.mlflow"
      MLFLOW_TRACKING_USERNAME: "yahiaehab10"
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Configure DVC and pull data
        run: |
          pip install dvc[dagshub]
          echo "Setting up DVC remote with DagsHub..."
          if [ -z "$DAGSHUB_TOKEN" ]; then
            echo "Error: DAGSHUB_TOKEN is not set"
            exit 1
          fi
          # Configure DVC remote with token
          dvc remote modify origin user yahiaehab10
          dvc remote modify origin password "$DAGSHUB_TOKEN"
          echo "Checking DVC status..."
          dvc status
          echo "Attempting to pull data..."
          dvc pull || {
            echo "DVC pull failed, this might be expected for new files"
            echo "Continuing with pipeline execution..."
          }
      - name: Run tests
        run: |
          python -m pytest tests/ -v
      - name: Run pipeline (training, evaluation, logging)
        run: |
          echo "üîç Debug: Environment variables"
          echo "DAGSHUB_TOKEN exists: $([ -n "$DAGSHUB_TOKEN" ] && echo "YES" || echo "NO")"
          echo "MLFLOW_TRACKING_URI: $MLFLOW_TRACKING_URI"
          echo "MLFLOW_TRACKING_USERNAME: $MLFLOW_TRACKING_USERNAME"
          echo ""
          echo " Starting ML Pipeline..."
          timeout 300 python -m src.pipeline || {
            echo " Pipeline timed out after 5 minutes"
            echo "This usually means authorization is required interactively"
            echo "Check DagsHub token configuration or use local MLflow"
            exit 1
          }
      - name: Push DVC artifacts
        run: |
          echo "üì§ Pushing DVC artifacts to remote storage..."
          dvc push || {
            echo "‚ö†Ô∏è  DVC push failed, but continuing with deployment"
            echo "This might happen if files are already up to date"
          }
      - name: Deploy model (promote to production if criteria met)
        run: |
          echo " Starting model promotion..."
          timeout 120 python scripts/promote_model.py || {
            echo " Model promotion timed out after 2 minutes"
            echo "This usually means authorization is required interactively"
            echo "Check DagsHub token configuration or use local MLflow"
            exit 1
          }
